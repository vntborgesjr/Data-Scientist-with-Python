reticulate::repl_python()
?reticulate
reticulate::install_miniconda()
reticulate::py_install(pandas)
reticulate::py_install(packages = c("pandas", "matplotlib"))
reticulate::import(pandas)
reticulate::import("pandas")
reticulate::repl_python()
data(gapminder)
gapminder <- gapminder::gapminder
gapminder
gapminder[, "year"]
max(gapminder[, "year"])
min(gapminder[, "year"])
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
?sample
reticulate::repl_python()
reticulate::repl_python()
x <- "Wed, Jan 6, 2016"
as.Data(x, format = "%Y-%m-%d")
as.Date(x, format = "%Y-%m-%d")
x <- "Wed, Jan 6, 2016"
x
as.Date(x, format = "%Y-%m-%d")
format(x, "%Y-%m-%d")
format(x, "%a, %b %d, %Y")
as.Date(x, format = "%a, %b %d, %Y")
x <- c("Nov-25", "Dec-30")
strsplit(x, split = TRUE)
strsplit(x, split = FALSE)
strsplit(x, split = " ")
strsplit(x, split = "-")
gapminder %>% group_by(population)
library(dplyr)
gapminder %>% group_by(population)
gapminder %>% group_by(pop)
gapminder %>% group_by(pop) == gapminder
filter(filter(df, year ==1982), country == "China")
reticulate::repl_python()
reticulate::source_python('~/Documentos/Vitor/DataCamp/Data-Scientist-with-Python/Intermediate-Python/03-Logic-Control-Flow-and-Filtering.py')
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
glimpse(cars)
dplyr::glimpse(cars)
str(cars)
